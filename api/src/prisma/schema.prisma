// ================== CONFIG START ==================
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// ================== CONFIG END ==================

// ================== ENUMS START ==================
enum GENDER {
  MALE
  FEMALE
  OTHERS
}

enum STATUS {
  ACTIVE
  DRAFT
  EXPIRED
}

enum ORG_SUB_TYPE {
  TECHNICAL
  CULTURAL
  SPORTS
  HACKATHON
  LITERARY
  FMS
}

enum ORG_TYPE {
  CLUB
  HOSTEL
  INSTITUTE
  BRANCH
  FEST
  BRANCH_SEM
  MESS
}

enum REPEAT_TYPE {
  SUNDAY
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
}

enum TRANSACTION_TYPE {
  REGISTRATION
  MERCH
  EVENT
}

// ================== ENUMS END ==================

// ================== MODELS START ==================
model User {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  email      String    @unique
  name       String?
  photo      String?
  gender     GENDER?
  dob        DateTime?
  state      String?
  city       String?
  college    String?
  stream     String?
  mobile     String    @unique
  selfID     String?
  festID     String[]  @default([])
  ca         String[]  @default([])
  referredBy String?
  rollNumber String?
  uid        String    @unique
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  hall       String?
}

model Org {
  id              String       @id @default(auto()) @map("_id") @db.ObjectId
  name            String
  description     String
  logo            String       @unique
  coverImg        String?
  tagline         String?
  theme           String?
  festID          String?
  registrationFee Int          @default(0)
  startDate       DateTime?
  endDate         DateTime?
  status          STATUS       @default(value: DRAFT)
  orgSubType      ORG_SUB_TYPE
  orgType         ORG_TYPE
  locationID      String?      @db.ObjectId
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
}

model Event {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  subHeading  String?
  prizeMoney  String?
  description String
  poster      String
  rules       String?
  locationID  String       @db.ObjectId
  startDate   DateTime
  endDate     DateTime
  orgID       String[]     @default([]) @db.ObjectId
  orgType     ORG_TYPE
  notes       String[]     @default([])
  pocID       String[]     @default([]) @db.ObjectId
  contact     String[]     @default([])
  weekly      Boolean      @default(false)
  repeatDay   REPEAT_TYPE?
  priority    Int          @default(0)
  status      STATUS       @default(value: DRAFT)
  type        String?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model Team {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  position  String?
  team      String?
  userID    String   @db.ObjectId
  orgID     String   @db.ObjectId
  priority  Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Transaction {
  id            String           @id @default(auto()) @map("_id") @db.ObjectId
  amount        Int
  userID        String           @db.ObjectId
  transactionID String
  type          TRANSACTION_TYPE
  timestamp     DateTime
  orgID         String           @db.ObjectId
  comment       String?
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @updatedAt
}

model EventRegistration {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  eventID   String   @db.ObjectId
  userID    String   @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Story {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  orgID     String   @db.ObjectId
  image     String
  linkTo    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Location {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  lat         Float?
  long        Float?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model DeveloperInfo {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  github    String   @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// ================== MODELS END ==================
